.Address Resolution Protocol

When a device communicates via an application with another device the application should have the ability to build layers 3 through 7 assuming the IP address
is known via DNS. In order to continue down the stack the application needs the MAC address of the destination device. Switches have lookup tables called
CAM (Content Addressable Memory) tables which has the mac addresses of all the devices connected to its ports. 

When the switch receives traffic for one its devices it checks the table and forwards the data to the correct port. If the MAC address is unknown the transmitting 
device will check its cache and if still unknown additional communication is required to resolve the MAC address via the Address Resolution Protocol 
on ipv4 networks defined by RFC 826. The protocol uses only two packets an ARP request and an ARP response.

The ARP request simple is a broadcast to all devices in the network segment stating "Hi this is my IP1:MAC pair and I have data for IP2 however I do not know
their MAC address. Whoever has this IP2 address could you please give me your MAC address". Ideally IP2 responds with their MAC address while all other 
devices drop the packet/discard the request. The requesting device then updates its CAM table and continues the data transfer.

.ARP Packet Structure

The ARP header includes the following fields:
-Hardware Type : Layer 2 mostly used is Ethernet in this case. Could be fiber in the future.
-Protocol Type : Higher-level protocol for which the ARP request is being used 
-Hardware Address Length : The length in (octet/bytes) of the hardware address in use  (6 for ethernet)
-Protocol Address Length : "                          " of the logical address in use 
-Operation : Function of the packet; 1 being request and 2 being response
-Sender Address Length : Hardware address of the sender
-Sender Protocol Address  : Senders upper layer protocol address
-Target Address Length  : Intended receivers hardware address (all zeroes in ARP reqests)
-Target Protocol Address : Intended receivers upper-layer protocol address

Gratuitous packets occur when an IP address changes and to avoid conflict with the new owner a broadcast is sent to update all devices who received the packet 
to update their CAM table. Some OS send them out on start up as well.  Load balancing is another potential reason.

.Internet Protocol

When devices are connected only via switches and hubs they are considered to be a local area network. MAC addresses suffice for intranetwork addresses while another addressing model is needed for interconnected networks via routers. Currently IPv4 and iIP6 are the most used protocols for this purpose however others do exist.

.IPv4

A 32-bit addressing system in quad dotted notation in the form A.B.C.D each letter containing 8 bits for a total of 255.255.255.255 possible addresses.
An IP address contains two parts a network portion and a host portion. The network portion identifies the portion of the LAN the device is connected to and the host portion identifies the device itself on said network. The determination of which portion is the host and which portion is the network is not always the same. This information is determined by the network mask (netmask) or also known as the subnet mask. The netmask is also 32 bits long with each bit set to 1 to identify the network portion part. Another notation is Classless Inter Domain Routing  (CIDR) with a / after the IP address followed by the bits belonging to the subnet mask. Example being an IP 10.10.0.6 with a 255.255.0.0 mask could be written as 10.10.0.6/16

.IPv4 Packet Structure
-Version: Version of IP being used (ipv4 is always 4)
-Header Length: Length of the IP header
-Type of Service: A precedence flag and type of service flag which are used by routers to prioritize traffic.
-Total Length: Length of header and data included
-Identification: Unique number to identify packet or sequence of fragmented packets
-Flags: Used to identify if packet is part of sequence
-Fragment Offset: If packet is fragment this helps put packet in correct sequence
-Time to live: Defines lifetime of packet determined by hops or seconds through routers
-Protocol: Identifies transport layer header that encapsulates the IPv4 header
-Header Checksum: error-detecting mechanism used to verify contents of header are not damaged
-Source IP address: IP address of sender
-Destination IP address: IP address of receiver
-Options: Reserved for additional options it includes source options and timestamps
-Data: The data being transmitted

IP fragmentation is a feature to ensure reliability across networks. Fragmentation size is based on the Layer 2 maximum transmission unit (MTU) of ethernet with
a default 1500 byte MTU not including the 14 byte ethernet header. MTU can be reconfigured and the device will check the MTU vs the size of the data length to determine if fragmentation is necessary.

Fragmenting involves the following steps:
1.  Device splits data into amount of packets for successful transmission.
2.  Total length field of each IP header is set to the segment size of each fragment.
3.  More fragments flag is set to 1 except for the last one.
4.  Fragment offset field is set in the IP header of the fragments.
5.  Fragments are transmitted.

Fragment offset = 0 is the first packet of the segmented sequence. Fragment offset of 1480 indicates a 1500 MTU minus the 20 byte IP header. The indentification field of all fragmented pieces will be the same as well.

.IPv6

RFC 2460 was created in 1998 as an upgrade to IPv4 to allow a larger address base to coexist. Addresses are 128 bit verse 32 bit and notated in 8 groups of 2 bytes in hexadecimal in the format 1111:aaaa:2222:bbbb:3333:cccc:4444:dddd

Hard to remember but a shortcut can allow the first set of 0000s in a address to be collapsed transforming 1111:0000:2222:bbbb:3333:cccc:4444:dddd to 1111::2222:bbbb:cccc:4444:dddd. Only one collapse is allowed before address becomes invalid. Leading zeros can also be dropped while in this form as well.

Similar to IPv4, v6 has a network and host portion called the network prefix and interface identifier respectively. Traffic is broken down into 3 categories: broadcast, multicast and anycast. In most cases link local unicast traffic will be the most common commmunication between local network devices.

format example is : fe80:0000:0000:0000:7a31:c1ff:fecb:b256
                    prefix:padding:padding:padding:interface identifier for last 4 groupings
                    
fe80 is the identifier for link local addresses in general first 10 bits being set followed by padding for next 54 bits.

The second half is the interface identifier which uniquely identifies a network interface on an end-point device. On ethernet this is a MAC address, however 48 bits and ipv6 is a 64 bit space so some padding is needed. The address is split in half and 0xfffe is added between each half as padding to create the unique identifier. Last the seventh bit of the first byte is inverted. 

An example being an original MAC address by this ID: 78:31:c1:cb:b2:56
The new address is the first split 78:31:c1 and cb:b2:56
The padding 0xfffe is applied resulting in 78:31:c1:ff and fe:cb:b2:56
The seventh bit is flipped converting the 8 to an a resulting in 7a:31:c1:ff and fe:cb:b2:56
The ipv4 transformed to ipv6 MAC address is now 7a31:c1ff:fecb:b256

ipv6 can also be displayed in CIDR notation with the forward slash /.

ipv6 notation changes when used within a global unicast context. The first 3 bits are set to 001 followed by 45 bit global routing prefix. The global prefix is set by the Internet Assigned Numbers Association (IANA) used to identify an organizations IP space. The next 16 bits are the organizations subnet ID similar to the ipv4 netmask.

An example being:

|-network prefix --|
2001:4860:4860:0000:7a31:cf11:fecb:b256
|routing prfix|mask|---interface id---|

ipv6 provides more efficiency than ipv4 in terms of routing packets to destination and making use of effective address space due link local and global addressing
along with unique host identifiers.

.IPv6 Packet Structure
Headers are fixed 40 bytes compared to variable length ipv4 headers. Additional options can be included via extension headers. The benefit being routers only need to process the 40 byte header to pass along information.

1.  Version: version of ip, v6 will always be 6
2.  Traffic Class:  prioritizes certain classes of traffic
3.  Flow Label: used by source to label certain packets belonging to same flow. typically used for quality of service management and ensure packets of same flow take same path
4.  Payload Length: Length of data payload followed by the IP header
5.  Next Header:  identifies layer 4 header encapsulating v6 header. replaces the v4 protocol field
6   Hop Limit:  defines the lifetime of the packet. replaces the TTL field in v4
7.  Source IP address : IP address of host
8.  Destination IP address: IP address of receiver

Higher Level protocols such as TCP and HTTP function the same regardless of the underlying IP addressing scheme used. This is the benefit of encapsulation as each layer functions independently.

.Neighbor Soliciation and ARP
ipv6 does not support broadcasting features ipv4 has. deemed as an inefficient method. ARP using broadcasting so how does ipv6 handle this?

Neighbor Discovery Protocol (NDP) and neighbor solicitation replacement methods for ARP in ipv6. Using ICMPv6, multicasting solicits only devices that are subscribed
to a data stream to receive and process it. Multicast traffic can be identified easily as it has its own reserve space (ff00::/8). Different protocol yet functions
similar to a request/response action reaction. Since MAC addresses are a layer 2 addressing scheme they are needed regardless of IP protocol and the requesting device solicits all devices in the domain with an ICMPv6 type 135 packet requesting the MAC address paired with the host IP address similar to the ARP methodology. The response is the same with the device who is being sought to respond with their MAC:IP pair and other devices disregard the initial request using an ICMPv6 type 136 packet.

.IPv6 Fragmentation
Devices transmitting ipv6 are expected to do a MTU discovery process to determine the maximum size of the packet before actually sending them. In the event the packet is to big the packet will be dropped and the router will send an ICMPv6 type 2 packet (Packet to big) to the sender. The sender will then try a smaller packet and the process will repeat until the largest possible MTU is accepted. A router will never be responsible for fragmenting packets, it is the senders duty. If the upper layer protocol cannot properly size MTU then fragmentation will still be used. A fragmentation header will be generated and the include the information from the ipv4 header.

Transitional Protocols
IPv6 packets can be encapsulated in IPv4 packets to work on IPv4 networks since transition has been slow. Enscapsulation occurs 3 ways:
1.  Router to Router: Uses a tunnel for encapsulation from src to dest . Allows entire networks to communicate in ipv6 on ipv4 networks
2.  Host to Router: Uses encapsulation for src to communicate with router on ipv6 while dest is inside ipv4 network
3.  Host to Host:  Uses tunnel method between endpoints to communicate directly on ipv4 networks

Several protocols include:
1. 6to4:  Allows transmission using the three above methodologies.
2. Toledo:  Uses NAT and ipv6 over ipv4 encapsulation via UDP tranport protocol
3. ISATAP:  intrasite protocol to allow transmission between hosts on same network

.Internet Control Message Protocol (ICMP)

Utility protocol of TCP/IP to provide information regarding availability of devices, services, or routes for TCP/IP. Defined RFC 792 most troubleshooting involves ICMP type messages.

.ICMP Packet Structure
Type: classification based on RFC spec
Code: subclass based on RFC spec
Checksum: used to ensure data received is correct and intact
Variable: portion that varies based on Type and Code fields

A popular use of ICMP is its ping feature, not part of the RFC spec yet uses ICMP to achieve its endgoal. Ping and echo are used interchangeably yet are different. Ping is a tool that uses ICMP echo requests. The random data in the ICMP request can potentially be used by an attacker to determine characteristics of the machine
or use it as a medium to communicate covertly.

.Traceroute
Traceroute issues a ICMP request to a destination with a TTL of 1 to get a destination unreachable response. The TTL is increased by 1 to record every new router hop until the destination is reached. Windows uses ICMP protocol exclusively while other OS's can map the route using other protocols.










            
