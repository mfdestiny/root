.Address Resolution Protocol

When a device communicates via an application with another device the application should have the ability to build layers 3 through 7 assuming the IP address
is known via DNS. In order to continue down the stack the application needs the MAC address of the destination device. Switches have lookup tables called
CAM (Content Addressable Memory) tables which has the mac addresses of all the devices connected to its ports. 

When the switch receives traffic for one its devices it checks the table and forwards the data to the correct port. If the MAC address is unknown the transmitting 
device will check its cache and if still unknown additional communication is required to resolve the MAC address via the Address Resolution Protocol 
on ipv4 networks defined by RFC 826. The protocol uses only two packets an ARP request and an ARP response.

The ARP request simple is a broadcast to all devices in the network segment stating "Hi this is my IP1:MAC pair and I have data for IP2 however I do not know
their MAC address. Whoever has this IP2 address could you please give me your MAC address". Ideally IP2 responds with their MAC address while all other 
devices drop the packet/discard the request. The requesting device then updates its CAM table and continues the data transfer.

.ARP Packet Structure

The ARP header includes the following fields:
-Hardware Type : Layer 2 mostly used is Ethernet in this case. Could be fiber in the future.
-Protocol Type : Higher-level protocol for which the ARP request is being used 
-Hardware Address Length : The length in (octet/bytes) of the hardware address in use  (6 for ethernet)
-Protocol Address Length : "                          " of the logical address in use 
-Operation : Function of the packet; 1 being request and 2 being response
-Sender Address Length : Hardware address of the sender
-Sender Protocol Address  : Senders upper layer protocol address
-Target Address Length  : Intended receivers hardware address (all zeroes in ARP reqests)
-Target Protocol Address : Intended receivers upper-layer protocol address

Gratuitous packets occur when an IP address changes and to avoid conflict with the new owner a broadcast is sent to update all devices who received the packet 
to update their CAM table. Some OS send them out on start up as well.  Load balancing is another potential reason.

.Internet Protocol

When devices are connected only via switches and hubs they are considered to be a local area network. MAC addresses suffice for intranetwork addresses while another addressing model is needed for interconnected networks via routers. Currently IPv4 and iIP6 are the most used protocols for this purpose however others do exist.

.IPv4

A 32-bit addressing system in quad dotted notation in the form A.B.C.D each letter containing 8 bits for a total of 255.255.255.255 possible addresses.
An IP address contains two parts a network portion and a host portion. The network portion identifies the portion of the LAN the device is connected to and the host portion identifies the device itself on said network. The determination of which portion is the host and which portion is the network is not always the same. This information is determined by the network mask (netmask) or also known as the subnet mask. The netmask is also 32 bits long with each bit set to 1 to identify the network portion part. Another notation is Classless Inter Domain Routing  (CIDR) with a / after the IP address followed by the bits belonging to the subnet mask. Example being an IP 10.10.0.6 with a 255.255.0.0 mask could be written as 10.10.0.6/16

.IPv4 Packet Structure
-Version: Version of IP being used (ipv4 is always 4)
-Header Length: Length of the IP header
-Type of Service: A precedence flag and type of service flag which are used by routers to prioritize traffic.
-Total Length: Length of header and data included
-Identification: Unique number to identify packet or sequence of fragmented packets
-Flags: Used to identify if packet is part of sequence
-Fragment Offset: If packet is fragment this helps put packet in correct sequence
-Time to live: Defines lifetime of packet determined by hops or seconds through routers
-Protocol: Identifies transport layer header that encapsulates the IPv4 header
-Header Checksum: error-detecting mechanism used to verify contents of header are not damaged
-Source IP address: IP address of sender
-Destination IP address: IP address of receiver
-Options: Reserved for additional options it includes source options and timestamps
-Data: The data being transmitted

IP fragmentation is a feature to ensure reliability across networks. Fragmentation size is based on the Layer 2 maximum transmission unit (MTU) of ethernet with
a default 1500 byte MTU not including the 14 byte ethernet header. MTU can be reconfigured and the device will check the MTU vs the size of the data length to determine if fragmentation is necessary.

Fragmenting involves the following steps:
1.  Device splits data into amount of packets for successful transmission.
2.  Total length field of each IP header is set to the segment size of each fragment.
3.  More fragments flag is set to 1 except for the last one.
4.  Fragment offset field is set in the IP header of the fragments.
5.  Fragments are transmitted.

Fragment offset = 0 is the first packet of the segmented sequence. Fragment offset of 1480 indicates a 1500 MTU minus the 20 byte IP header. The indentification field of all fragmented pieces will be the same as well.

.IPv6

RFC 2460 was created in 1998 as an upgrade to IPv4 to allow a larger address base to coexist. Addresses are 128 bit verse 32 bit and notated in 8 groups of 2 bytes in hexadecimal in the format 1111:aaaa:2222:bbbb:3333:cccc:4444:dddd

Hard to remember but a shortcut can allow the first set of 0000s in a address to be collapsed transforming 1111:0000:2222:bbbb:3333:cccc:4444:dddd to 1111::2222:bbbb:cccc:4444:dddd. Only one collapse is allowed before address becomes invalid. Leading zeros can also be dropped while in this form as well.

Similar to IPv4, v6 has a network and host portion called the network prefix and interface identifier respectively. Traffic is broken down into 3 categories: broadcast, multicast and anycast. In most cases link local unicast traffic will be the most common commmunication between local network devices.

format example is : fe80:0000:0000:0000:7a31:c1ff:fecb:b256
                    prefix:padding:padding:padding:interface identifier for last 4 groupings
                    
fe80 is the identifier for link local addresses in general first 10 bits being set followed by padding for next 54 bits.

The second half is the interface identifier which uniquely identifies a network interface on an end-point device. On ethernet this is a MAC address, however 48 bits and ipv6 is a 64 bit space so some padding is needed. The address is split in half and 0xfffe is added between each half as padding to create the unique identifier. Last the seventh bit of the first byte is inverted. 

An example being an original MAC address by this ID: 78:31:c1:cb:b2:56
The new address is the first split 78:31:c1 and cb:b2:56
The padding 0xfffe is applied resulting in 78:31:c1:ff and fe:cb:b2:56
The seventh bit is flipped converting the 8 to an a resulting in 7a:31:c1:ff and fe:cb:b2:56
The ipv4 transformed to ipv6 MAC address is now 7a31:c1ff:fecb:b256


